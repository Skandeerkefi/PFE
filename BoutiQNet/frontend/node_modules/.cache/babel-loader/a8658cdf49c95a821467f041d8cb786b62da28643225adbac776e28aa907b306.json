{"ast":null,"code":"import { createReducer } from \"@reduxjs/toolkit\";\n\n// Define action types as constants\nconst LoadUserRequest = \"LOAD_USER_REQUEST\";\nconst LOAD_USER_SUCCESS = \"LOAD_USER_SUCCESS\";\nconst LOAD_USER_FAIL = \"LOAD_USER_FAIL\";\nconst UPDATE_USER_INFO_REQUEST = \"UPDATE_USER_INFO_REQUEST\";\nconst UPDATE_USER_INFO_SUCCESS = \"UPDATE_USER_INFO_SUCCESS\";\nconst UPDATE_USER_INFO_FAILED = \"UPDATE_USER_INFO_FAILED\";\nconst UPDATE_USER_ADDRESS_REQUEST = \"UPDATE_USER_ADDRESS_REQUEST\";\nconst UPDATE_USER_ADDRESS_SUCCESS = \"UPDATE_USER_ADDRESS_SUCCESS\";\nconst UPDATE_USER_ADDRESS_FAILED = \"UPDATE_USER_ADDRESS_FAILED\";\nconst DELETE_USER_ADDRESS_REQUEST = \"DELETE_USER_ADDRESS_REQUEST\";\nconst DELETE_USER_ADDRESS_SUCCESS = \"DELETE_USER_ADDRESS_SUCCESS\";\nconst DELETE_USER_ADDRESS_FAILED = \"DELETE_USER_ADDRESS_FAILED\";\nconst GET_ALL_USERS_REQUEST = \"GET_ALL_USERS_REQUEST\";\nconst GET_ALL_USERS_SUCCESS = \"GET_ALL_USERS_SUCCESS\";\nconst GET_ALL_USERS_FAILED = \"GET_ALL_USERS_FAILED\";\nconst CLEAR_ERRORS = \"CLEAR_ERRORS\";\nconst CLEAR_MESSAGES = \"CLEAR_MESSAGES\";\nconst initialState = {\n  isAuthenticated: false,\n  loading: false,\n  addressloading: false,\n  successMessage: null,\n  error: null,\n  user: null,\n  users: []\n};\nexport const userReducer = createReducer(initialState, builder => {\n  builder.addCase(LOAD_USER_REQUEST, state => {\n    state.loading = true;\n  }).addCase(LOAD_USER_SUCCESS, (state, action) => {\n    state.isAuthenticated = true;\n    state.loading = false;\n    state.user = action.payload;\n  }).addCase(LOAD_USER_FAIL, (state, action) => {\n    state.loading = false;\n    state.error = action.payload;\n    state.isAuthenticated = false;\n  }).addCase(UPDATE_USER_INFO_REQUEST, state => {\n    state.loading = true;\n  }).addCase(UPDATE_USER_INFO_SUCCESS, (state, action) => {\n    state.loading = false;\n    state.user = action.payload;\n  }).addCase(UPDATE_USER_INFO_FAILED, (state, action) => {\n    state.loading = false;\n    state.error = action.payload;\n  }).addCase(UPDATE_USER_ADDRESS_REQUEST, state => {\n    state.addressloading = true;\n  }).addCase(UPDATE_USER_ADDRESS_SUCCESS, (state, action) => {\n    state.addressloading = false;\n    state.successMessage = action.payload.successMessage;\n    state.user = action.payload.user;\n  }).addCase(UPDATE_USER_ADDRESS_FAILED, (state, action) => {\n    state.addressloading = false;\n    state.error = action.payload;\n  }).addCase(DELETE_USER_ADDRESS_REQUEST, state => {\n    state.addressloading = true;\n  }).addCase(DELETE_USER_ADDRESS_SUCCESS, (state, action) => {\n    state.addressloading = false;\n    state.successMessage = action.payload.successMessage;\n    state.user = action.payload.user;\n  }).addCase(DELETE_USER_ADDRESS_FAILED, (state, action) => {\n    state.addressloading = false;\n    state.error = action.payload;\n  }).addCase(GET_ALL_USERS_REQUEST, state => {\n    state.usersLoading = true;\n  }).addCase(GET_ALL_USERS_SUCCESS, (state, action) => {\n    state.usersLoading = false;\n    state.users = action.payload;\n  }).addCase(GET_ALL_USERS_FAILED, (state, action) => {\n    state.usersLoading = false;\n    state.error = action.payload;\n  }).addCase(CLEAR_ERRORS, state => {\n    state.error = null;\n  }).addCase(CLEAR_MESSAGES, state => {\n    state.successMessage = null;\n  });\n});","map":{"version":3,"names":["createReducer","LoadUserRequest","LOAD_USER_SUCCESS","LOAD_USER_FAIL","UPDATE_USER_INFO_REQUEST","UPDATE_USER_INFO_SUCCESS","UPDATE_USER_INFO_FAILED","UPDATE_USER_ADDRESS_REQUEST","UPDATE_USER_ADDRESS_SUCCESS","UPDATE_USER_ADDRESS_FAILED","DELETE_USER_ADDRESS_REQUEST","DELETE_USER_ADDRESS_SUCCESS","DELETE_USER_ADDRESS_FAILED","GET_ALL_USERS_REQUEST","GET_ALL_USERS_SUCCESS","GET_ALL_USERS_FAILED","CLEAR_ERRORS","CLEAR_MESSAGES","initialState","isAuthenticated","loading","addressloading","successMessage","error","user","users","userReducer","builder","addCase","LOAD_USER_REQUEST","state","action","payload","usersLoading"],"sources":["C:/Users/skander/Desktop/ProjectPFE/PFE/BoutiQNet/frontend/src/redux/reducers/user.js"],"sourcesContent":["import { createReducer } from \"@reduxjs/toolkit\";\r\n\r\n// Define action types as constants\r\nconst LoadUserRequest = \"LOAD_USER_REQUEST\";\r\nconst LOAD_USER_SUCCESS = \"LOAD_USER_SUCCESS\";\r\nconst LOAD_USER_FAIL = \"LOAD_USER_FAIL\";\r\nconst UPDATE_USER_INFO_REQUEST = \"UPDATE_USER_INFO_REQUEST\";\r\nconst UPDATE_USER_INFO_SUCCESS = \"UPDATE_USER_INFO_SUCCESS\";\r\nconst UPDATE_USER_INFO_FAILED = \"UPDATE_USER_INFO_FAILED\";\r\nconst UPDATE_USER_ADDRESS_REQUEST = \"UPDATE_USER_ADDRESS_REQUEST\";\r\nconst UPDATE_USER_ADDRESS_SUCCESS = \"UPDATE_USER_ADDRESS_SUCCESS\";\r\nconst UPDATE_USER_ADDRESS_FAILED = \"UPDATE_USER_ADDRESS_FAILED\";\r\nconst DELETE_USER_ADDRESS_REQUEST = \"DELETE_USER_ADDRESS_REQUEST\";\r\nconst DELETE_USER_ADDRESS_SUCCESS = \"DELETE_USER_ADDRESS_SUCCESS\";\r\nconst DELETE_USER_ADDRESS_FAILED = \"DELETE_USER_ADDRESS_FAILED\";\r\nconst GET_ALL_USERS_REQUEST = \"GET_ALL_USERS_REQUEST\";\r\nconst GET_ALL_USERS_SUCCESS = \"GET_ALL_USERS_SUCCESS\";\r\nconst GET_ALL_USERS_FAILED = \"GET_ALL_USERS_FAILED\";\r\nconst CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\nconst CLEAR_MESSAGES = \"CLEAR_MESSAGES\";\r\n\r\nconst initialState = {\r\n\tisAuthenticated: false,\r\n\tloading: false,\r\n\taddressloading: false,\r\n\tsuccessMessage: null,\r\n\terror: null,\r\n\tuser: null,\r\n\tusers: [],\r\n};\r\n\r\nexport const userReducer = createReducer(initialState, (builder) => {\r\n\tbuilder\r\n\t\t.addCase(LOAD_USER_REQUEST, (state) => {\r\n\t\t\tstate.loading = true;\r\n\t\t})\r\n\t\t.addCase(LOAD_USER_SUCCESS, (state, action) => {\r\n\t\t\tstate.isAuthenticated = true;\r\n\t\t\tstate.loading = false;\r\n\t\t\tstate.user = action.payload;\r\n\t\t})\r\n\t\t.addCase(LOAD_USER_FAIL, (state, action) => {\r\n\t\t\tstate.loading = false;\r\n\t\t\tstate.error = action.payload;\r\n\t\t\tstate.isAuthenticated = false;\r\n\t\t})\r\n\t\t.addCase(UPDATE_USER_INFO_REQUEST, (state) => {\r\n\t\t\tstate.loading = true;\r\n\t\t})\r\n\t\t.addCase(UPDATE_USER_INFO_SUCCESS, (state, action) => {\r\n\t\t\tstate.loading = false;\r\n\t\t\tstate.user = action.payload;\r\n\t\t})\r\n\t\t.addCase(UPDATE_USER_INFO_FAILED, (state, action) => {\r\n\t\t\tstate.loading = false;\r\n\t\t\tstate.error = action.payload;\r\n\t\t})\r\n\t\t.addCase(UPDATE_USER_ADDRESS_REQUEST, (state) => {\r\n\t\t\tstate.addressloading = true;\r\n\t\t})\r\n\t\t.addCase(UPDATE_USER_ADDRESS_SUCCESS, (state, action) => {\r\n\t\t\tstate.addressloading = false;\r\n\t\t\tstate.successMessage = action.payload.successMessage;\r\n\t\t\tstate.user = action.payload.user;\r\n\t\t})\r\n\t\t.addCase(UPDATE_USER_ADDRESS_FAILED, (state, action) => {\r\n\t\t\tstate.addressloading = false;\r\n\t\t\tstate.error = action.payload;\r\n\t\t})\r\n\t\t.addCase(DELETE_USER_ADDRESS_REQUEST, (state) => {\r\n\t\t\tstate.addressloading = true;\r\n\t\t})\r\n\t\t.addCase(DELETE_USER_ADDRESS_SUCCESS, (state, action) => {\r\n\t\t\tstate.addressloading = false;\r\n\t\t\tstate.successMessage = action.payload.successMessage;\r\n\t\t\tstate.user = action.payload.user;\r\n\t\t})\r\n\t\t.addCase(DELETE_USER_ADDRESS_FAILED, (state, action) => {\r\n\t\t\tstate.addressloading = false;\r\n\t\t\tstate.error = action.payload;\r\n\t\t})\r\n\t\t.addCase(GET_ALL_USERS_REQUEST, (state) => {\r\n\t\t\tstate.usersLoading = true;\r\n\t\t})\r\n\t\t.addCase(GET_ALL_USERS_SUCCESS, (state, action) => {\r\n\t\t\tstate.usersLoading = false;\r\n\t\t\tstate.users = action.payload;\r\n\t\t})\r\n\t\t.addCase(GET_ALL_USERS_FAILED, (state, action) => {\r\n\t\t\tstate.usersLoading = false;\r\n\t\t\tstate.error = action.payload;\r\n\t\t})\r\n\t\t.addCase(CLEAR_ERRORS, (state) => {\r\n\t\t\tstate.error = null;\r\n\t\t})\r\n\t\t.addCase(CLEAR_MESSAGES, (state) => {\r\n\t\t\tstate.successMessage = null;\r\n\t\t});\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}