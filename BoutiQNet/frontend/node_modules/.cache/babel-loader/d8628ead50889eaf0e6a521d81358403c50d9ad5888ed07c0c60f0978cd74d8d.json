{"ast":null,"code":"import axios from \"axios\";\nimport { server } from \"../../server\";\n\n// load user\nexport const loadUser = () => async dispatch => {\n  try {\n    dispatch({\n      type: \"LoadUserRequest\"\n    });\n    const {\n      data\n    } = await axios.get(`${server}/user/getUser`, {});\n    dispatch({\n      type: \"LoadUserSuccess\",\n      payload: data.user\n    });\n  } catch (error) {\n    dispatch({\n      type: \"LoadUserFail\",\n      payload: error.response.data.message\n    });\n  }\n};\n\n// load seller\nexport const loadSeller = () => async dispatch => {\n  try {\n    dispatch({\n      type: \"LoadSellerRequest\"\n    });\n    const {\n      data\n    } = await axios.get(`${server}/shop/getSeller`, {\n      withCredentials: true\n    });\n    dispatch({\n      type: \"LoadSellerSuccess\",\n      payload: data.seller\n    });\n  } catch (error) {\n    dispatch({\n      type: \"LoadSellerFail\",\n      payload: error.response.data.message\n    });\n  }\n};\n\n// user update information\nexport const updateUserInformation = (name, email, phoneNumber, password) => async dispatch => {\n  try {\n    dispatch({\n      type: \"updateUserInfoRequest\"\n    });\n    const {\n      data\n    } = await axios.put(`${server}/user/update-user-info`, {\n      email,\n      password,\n      phoneNumber,\n      name\n    }, {\n      withCredentials: true,\n      headers: {\n        \"Access-Control-Allow-Credentials\": true\n      }\n    });\n    dispatch({\n      type: \"updateUserInfoSuccess\",\n      payload: data.user\n    });\n  } catch (error) {\n    dispatch({\n      type: \"updateUserInfoFailed\",\n      payload: error.response.data.message\n    });\n  }\n};\n\n// update user address\nexport const updatUserAddress = (country, city, address1, address2, zipCode, addressType) => async dispatch => {\n  try {\n    dispatch({\n      type: \"updateUserAddressRequest\"\n    });\n    const {\n      data\n    } = await axios.put(`${server}/user/update-user-addresses`, {\n      country,\n      city,\n      address1,\n      address2,\n      zipCode,\n      addressType\n    }, {\n      withCredentials: true\n    });\n    dispatch({\n      type: \"updateUserAddressSuccess\",\n      payload: {\n        successMessage: \"User address updated succesfully!\",\n        user: data.user\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: \"updateUserAddressFailed\",\n      payload: error.response.data.message\n    });\n  }\n};\n\n// delete user address\nexport const deleteUserAddress = id => async dispatch => {\n  try {\n    dispatch({\n      type: \"deleteUserAddressRequest\"\n    });\n    const {\n      data\n    } = await axios.delete(`${server}/user/delete-user-address/${id}`, {\n      withCredentials: true\n    });\n    dispatch({\n      type: \"deleteUserAddressSuccess\",\n      payload: {\n        successMessage: \"User deleted successfully!\",\n        user: data.user\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: \"deleteUserAddressFailed\",\n      payload: error.response.data.message\n    });\n  }\n};\n\n// get all users --- admin\nexport const getAllUsers = () => async dispatch => {\n  try {\n    dispatch({\n      type: \"getAllUsersRequest\"\n    });\n    const {\n      data\n    } = await axios.get(`${server}/user/admin-all-users`, {\n      withCredentials: true\n    });\n    dispatch({\n      type: \"getAllUsersSuccess\",\n      payload: data.users\n    });\n  } catch (error) {\n    dispatch({\n      type: \"getAllUsersFailed\",\n      payload: error.response.data.message\n    });\n  }\n};","map":{"version":3,"names":["axios","server","loadUser","dispatch","type","data","get","payload","user","error","response","message","loadSeller","withCredentials","seller","updateUserInformation","name","email","phoneNumber","password","put","headers","updatUserAddress","country","city","address1","address2","zipCode","addressType","successMessage","deleteUserAddress","id","delete","getAllUsers","users"],"sources":["C:/Users/skander/Desktop/ProjectPFE/PFE/BoutiQNet/frontend/src/redux/actions/user.js"],"sourcesContent":["import axios from \"axios\";\nimport { server } from \"../../server\";\n\n// load user\nexport const loadUser = () => async (dispatch) => {\n\ttry {\n\t\tdispatch({\n\t\t\ttype: \"LoadUserRequest\",\n\t\t});\n\t\tconst { data } = await axios.get(`${server}/user/getUser`, {});\n\t\tdispatch({\n\t\t\ttype: \"LoadUserSuccess\",\n\t\t\tpayload: data.user,\n\t\t});\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: \"LoadUserFail\",\n\t\t\tpayload: error.response.data.message,\n\t\t});\n\t}\n};\n\n// load seller\nexport const loadSeller = () => async (dispatch) => {\n\ttry {\n\t\tdispatch({\n\t\t\ttype: \"LoadSellerRequest\",\n\t\t});\n\t\tconst { data } = await axios.get(`${server}/shop/getSeller`, {\n\t\t\twithCredentials: true,\n\t\t});\n\t\tdispatch({\n\t\t\ttype: \"LoadSellerSuccess\",\n\t\t\tpayload: data.seller,\n\t\t});\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: \"LoadSellerFail\",\n\t\t\tpayload: error.response.data.message,\n\t\t});\n\t}\n};\n\n// user update information\nexport const updateUserInformation =\n\t(name, email, phoneNumber, password) => async (dispatch) => {\n\t\ttry {\n\t\t\tdispatch({\n\t\t\t\ttype: \"updateUserInfoRequest\",\n\t\t\t});\n\n\t\t\tconst { data } = await axios.put(\n\t\t\t\t`${server}/user/update-user-info`,\n\t\t\t\t{\n\t\t\t\t\temail,\n\t\t\t\t\tpassword,\n\t\t\t\t\tphoneNumber,\n\t\t\t\t\tname,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\twithCredentials: true,\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t\"Access-Control-Allow-Credentials\": true,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tdispatch({\n\t\t\t\ttype: \"updateUserInfoSuccess\",\n\t\t\t\tpayload: data.user,\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tdispatch({\n\t\t\t\ttype: \"updateUserInfoFailed\",\n\t\t\t\tpayload: error.response.data.message,\n\t\t\t});\n\t\t}\n\t};\n\n// update user address\nexport const updatUserAddress =\n\t(country, city, address1, address2, zipCode, addressType) =>\n\tasync (dispatch) => {\n\t\ttry {\n\t\t\tdispatch({\n\t\t\t\ttype: \"updateUserAddressRequest\",\n\t\t\t});\n\n\t\t\tconst { data } = await axios.put(\n\t\t\t\t`${server}/user/update-user-addresses`,\n\t\t\t\t{\n\t\t\t\t\tcountry,\n\t\t\t\t\tcity,\n\t\t\t\t\taddress1,\n\t\t\t\t\taddress2,\n\t\t\t\t\tzipCode,\n\t\t\t\t\taddressType,\n\t\t\t\t},\n\t\t\t\t{ withCredentials: true }\n\t\t\t);\n\n\t\t\tdispatch({\n\t\t\t\ttype: \"updateUserAddressSuccess\",\n\t\t\t\tpayload: {\n\t\t\t\t\tsuccessMessage: \"User address updated succesfully!\",\n\t\t\t\t\tuser: data.user,\n\t\t\t\t},\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tdispatch({\n\t\t\t\ttype: \"updateUserAddressFailed\",\n\t\t\t\tpayload: error.response.data.message,\n\t\t\t});\n\t\t}\n\t};\n\n// delete user address\nexport const deleteUserAddress = (id) => async (dispatch) => {\n\ttry {\n\t\tdispatch({\n\t\t\ttype: \"deleteUserAddressRequest\",\n\t\t});\n\n\t\tconst { data } = await axios.delete(\n\t\t\t`${server}/user/delete-user-address/${id}`,\n\t\t\t{ withCredentials: true }\n\t\t);\n\n\t\tdispatch({\n\t\t\ttype: \"deleteUserAddressSuccess\",\n\t\t\tpayload: {\n\t\t\t\tsuccessMessage: \"User deleted successfully!\",\n\t\t\t\tuser: data.user,\n\t\t\t},\n\t\t});\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: \"deleteUserAddressFailed\",\n\t\t\tpayload: error.response.data.message,\n\t\t});\n\t}\n};\n\n// get all users --- admin\nexport const getAllUsers = () => async (dispatch) => {\n\ttry {\n\t\tdispatch({\n\t\t\ttype: \"getAllUsersRequest\",\n\t\t});\n\n\t\tconst { data } = await axios.get(`${server}/user/admin-all-users`, {\n\t\t\twithCredentials: true,\n\t\t});\n\n\t\tdispatch({\n\t\t\ttype: \"getAllUsersSuccess\",\n\t\t\tpayload: data.users,\n\t\t});\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: \"getAllUsersFailed\",\n\t\t\tpayload: error.response.data.message,\n\t\t});\n\t}\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}