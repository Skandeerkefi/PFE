{"ast":null,"code":"import axios from \"axios\";\nimport { server } from \"../../server\";\n\n// load user\nexport const loadUser = () => async dispatch => {\n  try {\n    dispatch({\n      type: \"LoadUserRequest\"\n    });\n    const user_token = localStorage.getItem(\"token\");\n    const {\n      data\n    } = await axios.get(`${server}/user/getUser`, {\n      headers: {\n        Authorization: `Bearer ${user_token}`\n      }\n    });\n    dispatch({\n      type: \"LoadUserSuccess\",\n      payload: data.user\n    });\n  } catch (error) {\n    dispatch({\n      type: \"LoadUserFail\",\n      payload: error.response.data.message\n    });\n  }\n};\n\n// load seller\nexport const loadSeller = () => async dispatch => {\n  try {\n    dispatch({\n      type: \"LoadSellerRequest\"\n    });\n    const seller_token = localStorage.getItem(\"seller_token\");\n    const {\n      data\n    } = await axios.get(`${server}/shop/getSeller`, {\n      headers: {\n        Authorization: `Bearer ${seller_token}`\n      }\n    });\n    dispatch({\n      type: \"LoadSellerSuccess\",\n      payload: data.seller\n    });\n  } catch (error) {\n    dispatch({\n      type: \"LoadSellerFail\",\n      payload: error.message\n    });\n  }\n};\n\n// user update information\nexport const updateUserInformation = (name, email, phoneNumber, password) => async dispatch => {\n  try {\n    dispatch({\n      type: \"updateUserInfoRequest\"\n    });\n    const user_token = localStorage.getItem(\"token\");\n    const {\n      data\n    } = await axios.put(`${server}/user/update-user-info`, {\n      email,\n      password,\n      phoneNumber,\n      name\n    }, {\n      headers: {\n        Authorization: `Bearer ${user_token}`\n      }\n    });\n    dispatch({\n      type: \"updateUserInfoSuccess\",\n      payload: data.user\n    });\n  } catch (error) {\n    dispatch({\n      type: \"updateUserInfoFailed\",\n      payload: error.message\n    });\n  }\n};\n\n// update user address\nexport const updatUserAddress = (country, city, address1, address2, zipCode, addressType) => async dispatch => {\n  try {\n    dispatch({\n      type: \"updateUserAddressRequest\"\n    });\n    const user_token = localStorage.getItem(\"token\");\n    const {\n      data\n    } = await axios.put(`${server}/user/update-user-addresses`, {\n      country,\n      city,\n      address1,\n      address2,\n      zipCode,\n      addressType\n    }, {\n      headers: {\n        Authorization: `Bearer ${user_token}`\n      }\n    });\n    dispatch({\n      type: \"updateUserAddressSuccess\",\n      payload: {\n        successMessage: \"User address updated succesfully!\",\n        user: data.user\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: \"updateUserAddressFailed\",\n      payload: error.response.data.message\n    });\n  }\n};\n\n// delete user address\nexport const deleteUserAddress = id => async dispatch => {\n  try {\n    dispatch({\n      type: \"deleteUserAddressRequest\"\n    });\n    const user_token = localStorage.getItem(\"token\");\n    const {\n      data\n    } = await axios.delete(`${server}/user/delete-user-address/${id}`, {\n      headers: {\n        Authorization: `Bearer ${user_token}`\n      }\n    });\n    dispatch({\n      type: \"deleteUserAddressSuccess\",\n      payload: {\n        successMessage: \"User deleted successfully!\",\n        user: data.user\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: \"deleteUserAddressFailed\",\n      payload: error.response.data.message\n    });\n  }\n};\n\n// get all users --- admin\nexport const getAllUsers = () => async dispatch => {\n  try {\n    dispatch({\n      type: \"getAllUsersRequest\"\n    });\n    const {\n      data\n    } = await axios.get(`${server}/user/admin-all-users`, {\n      withCredentials: true\n    });\n    dispatch({\n      type: \"getAllUsersSuccess\",\n      payload: data.users\n    });\n  } catch (error) {\n    dispatch({\n      type: \"getAllUsersFailed\",\n      payload: error.response.data.message\n    });\n  }\n};","map":{"version":3,"names":["axios","server","loadUser","dispatch","type","user_token","localStorage","getItem","data","get","headers","Authorization","payload","user","error","response","message","loadSeller","seller_token","seller","updateUserInformation","name","email","phoneNumber","password","put","updatUserAddress","country","city","address1","address2","zipCode","addressType","successMessage","deleteUserAddress","id","delete","getAllUsers","withCredentials","users"],"sources":["C:/Users/skander/Desktop/ProjectPFE/PFE/BoutiQNet/frontend/src/redux/actions/user.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { server } from \"../../server\";\r\n\r\n// load user\r\nexport const loadUser = () => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: \"LoadUserRequest\",\r\n\t\t});\r\n\r\n\t\tconst user_token = localStorage.getItem(\"token\");\r\n\t\tconst { data } = await axios.get(`${server}/user/getUser`, {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `Bearer ${user_token}`,\r\n\t\t\t},\r\n\t\t});\r\n\t\tdispatch({\r\n\t\t\ttype: \"LoadUserSuccess\",\r\n\t\t\tpayload: data.user,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: \"LoadUserFail\",\r\n\t\t\tpayload: error.response.data.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\n// load seller\r\nexport const loadSeller = () => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: \"LoadSellerRequest\",\r\n\t\t});\r\n\t\tconst seller_token = localStorage.getItem(\"seller_token\");\r\n\t\tconst { data } = await axios.get(`${server}/shop/getSeller`, {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `Bearer ${seller_token}`,\r\n\t\t\t},\r\n\t\t});\r\n\t\tdispatch({\r\n\t\t\ttype: \"LoadSellerSuccess\",\r\n\t\t\tpayload: data.seller,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: \"LoadSellerFail\",\r\n\t\t\tpayload: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\n// user update information\r\nexport const updateUserInformation =\r\n\t(name, email, phoneNumber, password) => async (dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: \"updateUserInfoRequest\",\r\n\t\t\t});\r\n\r\n\t\t\tconst user_token = localStorage.getItem(\"token\");\r\n\t\t\tconst { data } = await axios.put(\r\n\t\t\t\t`${server}/user/update-user-info`,\r\n\t\t\t\t{\r\n\t\t\t\t\temail,\r\n\t\t\t\t\tpassword,\r\n\t\t\t\t\tphoneNumber,\r\n\t\t\t\t\tname,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAuthorization: `Bearer ${user_token}`,\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: \"updateUserInfoSuccess\",\r\n\t\t\t\tpayload: data.user,\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: \"updateUserInfoFailed\",\r\n\t\t\t\tpayload: error.message,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n// update user address\r\nexport const updatUserAddress =\r\n\t(country, city, address1, address2, zipCode, addressType) =>\r\n\tasync (dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: \"updateUserAddressRequest\",\r\n\t\t\t});\r\n\t\t\tconst user_token = localStorage.getItem(\"token\");\r\n\t\t\tconst { data } = await axios.put(\r\n\t\t\t\t`${server}/user/update-user-addresses`,\r\n\t\t\t\t{\r\n\t\t\t\t\tcountry,\r\n\t\t\t\t\tcity,\r\n\t\t\t\t\taddress1,\r\n\t\t\t\t\taddress2,\r\n\t\t\t\t\tzipCode,\r\n\t\t\t\t\taddressType,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAuthorization: `Bearer ${user_token}`,\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: \"updateUserAddressSuccess\",\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tsuccessMessage: \"User address updated succesfully!\",\r\n\t\t\t\t\tuser: data.user,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: \"updateUserAddressFailed\",\r\n\t\t\t\tpayload: error.response.data.message,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n// delete user address\r\nexport const deleteUserAddress = (id) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: \"deleteUserAddressRequest\",\r\n\t\t});\r\n\t\tconst user_token = localStorage.getItem(\"token\");\r\n\t\tconst { data } = await axios.delete(\r\n\t\t\t`${server}/user/delete-user-address/${id}`,\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `Bearer ${user_token}`,\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: \"deleteUserAddressSuccess\",\r\n\t\t\tpayload: {\r\n\t\t\t\tsuccessMessage: \"User deleted successfully!\",\r\n\t\t\t\tuser: data.user,\r\n\t\t\t},\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: \"deleteUserAddressFailed\",\r\n\t\t\tpayload: error.response.data.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\n// get all users --- admin\r\nexport const getAllUsers = () => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: \"getAllUsersRequest\",\r\n\t\t});\r\n\r\n\t\tconst { data } = await axios.get(`${server}/user/admin-all-users`, {\r\n\t\t\twithCredentials: true,\r\n\t\t});\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: \"getAllUsersSuccess\",\r\n\t\t\tpayload: data.users,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: \"getAllUsersFailed\",\r\n\t\t\tpayload: error.response.data.message,\r\n\t\t});\r\n\t}\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}