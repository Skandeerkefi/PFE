{"ast":null,"code":"import { createReducer } from \"@reduxjs/toolkit\";\n\n// Define action types as constants\nconst LoadUserRequest = \"LoadUserRequest\";\nconst LoadUserSuccess = \"LoadUserSuccess\";\nconst LoadUserFail = \"LoadUserFail\";\nconst updateUserInfoRequest = \"updateUserInfoRequest\";\nconst updateUserInfoSuccess = \"updateUserInfoSuccess\";\nconst updateUserInfoFailed = \"updateUserInfoFailed\";\nconst updateUserAddressRequest = \"updateUserAddressRequest\";\nconst updateUserAddressSuccess = \"updateUserAddressSuccess\";\nconst updateUserAddressFailed = \"updateUserAddressFailed\";\nconst deleteUserAddressRequest = \"deleteUserAddressRequest\";\nconst deleteUserAddressSuccess = \"deleteUserAddressSuccess\";\nconst deleteUserAddressFailed = \"deleteUserAddressFailed\";\nconst getAllUsersRequest = \"getAllUsersRequest\";\nconst GET_ALL_USERS_SUCCESS = \"GET_ALL_USERS_SUCCESS\";\nconst GET_ALL_USERS_FAILED = \"GET_ALL_USERS_FAILED\";\nconst CLEAR_ERRORS = \"CLEAR_ERRORS\";\nconst CLEAR_MESSAGES = \"CLEAR_MESSAGES\";\nconst initialState = {\n  isAuthenticated: false,\n  loading: false,\n  addressloading: false,\n  successMessage: null,\n  error: null,\n  user: null,\n  users: []\n};\nexport const userReducer = createReducer(initialState, builder => {\n  builder.addCase(LoadUserRequest, state => {\n    state.loading = true;\n  }).addCase(LoadUserSuccess, (state, action) => {\n    state.isAuthenticated = true;\n    state.loading = false;\n    state.user = action.payload;\n  }).addCase(LoadUserFail, (state, action) => {\n    state.loading = false;\n    state.error = action.payload;\n    state.isAuthenticated = false;\n  }).addCase(updateUserInfoRequest, state => {\n    state.loading = true;\n  }).addCase(updateUserInfoSuccess, (state, action) => {\n    state.loading = false;\n    state.user = action.payload;\n  }).addCase(updateUserInfoFailed, (state, action) => {\n    state.loading = false;\n    state.error = action.payload;\n  }).addCase(updateUserAddressRequest, state => {\n    state.addressloading = true;\n  }).addCase(updateUserAddressSuccess, (state, action) => {\n    state.addressloading = false;\n    state.successMessage = action.payload.successMessage;\n    state.user = action.payload.user;\n  }).addCase(updateUserAddressFailed, (state, action) => {\n    state.addressloading = false;\n    state.error = action.payload;\n  }).addCase(deleteUserAddressRequest, state => {\n    state.addressloading = true;\n  }).addCase(deleteUserAddressSuccess, (state, action) => {\n    state.addressloading = false;\n    state.successMessage = action.payload.successMessage;\n    state.user = action.payload.user;\n  }).addCase(deleteUserAddressFailed, (state, action) => {\n    state.addressloading = false;\n    state.error = action.payload;\n  }).addCase(getAllUsersRequest, state => {\n    state.usersLoading = true;\n  }).addCase(GET_ALL_USERS_SUCCESS, (state, action) => {\n    state.usersLoading = false;\n    state.users = action.payload;\n  }).addCase(GET_ALL_USERS_FAILED, (state, action) => {\n    state.usersLoading = false;\n    state.error = action.payload;\n  }).addCase(CLEAR_ERRORS, state => {\n    state.error = null;\n  }).addCase(CLEAR_MESSAGES, state => {\n    state.successMessage = null;\n  });\n});","map":{"version":3,"names":["createReducer","LoadUserRequest","LoadUserSuccess","LoadUserFail","updateUserInfoRequest","updateUserInfoSuccess","updateUserInfoFailed","updateUserAddressRequest","updateUserAddressSuccess","updateUserAddressFailed","deleteUserAddressRequest","deleteUserAddressSuccess","deleteUserAddressFailed","getAllUsersRequest","GET_ALL_USERS_SUCCESS","GET_ALL_USERS_FAILED","CLEAR_ERRORS","CLEAR_MESSAGES","initialState","isAuthenticated","loading","addressloading","successMessage","error","user","users","userReducer","builder","addCase","state","action","payload","usersLoading"],"sources":["C:/Users/skander/Desktop/ProjectPFE/PFE/BoutiQNet/frontend/src/redux/reducers/user.js"],"sourcesContent":["import { createReducer } from \"@reduxjs/toolkit\";\r\n\r\n// Define action types as constants\r\nconst LoadUserRequest = \"LoadUserRequest\";\r\nconst LoadUserSuccess = \"LoadUserSuccess\";\r\nconst LoadUserFail = \"LoadUserFail\";\r\nconst updateUserInfoRequest = \"updateUserInfoRequest\";\r\nconst updateUserInfoSuccess = \"updateUserInfoSuccess\";\r\nconst updateUserInfoFailed = \"updateUserInfoFailed\";\r\nconst updateUserAddressRequest = \"updateUserAddressRequest\";\r\nconst updateUserAddressSuccess = \"updateUserAddressSuccess\";\r\nconst updateUserAddressFailed = \"updateUserAddressFailed\";\r\nconst deleteUserAddressRequest = \"deleteUserAddressRequest\";\r\nconst deleteUserAddressSuccess = \"deleteUserAddressSuccess\";\r\nconst deleteUserAddressFailed = \"deleteUserAddressFailed\";\r\nconst getAllUsersRequest = \"getAllUsersRequest\";\r\nconst GET_ALL_USERS_SUCCESS = \"GET_ALL_USERS_SUCCESS\";\r\nconst GET_ALL_USERS_FAILED = \"GET_ALL_USERS_FAILED\";\r\nconst CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\nconst CLEAR_MESSAGES = \"CLEAR_MESSAGES\";\r\n\r\nconst initialState = {\r\n\tisAuthenticated: false,\r\n\tloading: false,\r\n\taddressloading: false,\r\n\tsuccessMessage: null,\r\n\terror: null,\r\n\tuser: null,\r\n\tusers: [],\r\n};\r\n\r\nexport const userReducer = createReducer(initialState, (builder) => {\r\n\tbuilder\r\n\t\t.addCase(LoadUserRequest, (state) => {\r\n\t\t\tstate.loading = true;\r\n\t\t})\r\n\t\t.addCase(LoadUserSuccess, (state, action) => {\r\n\t\t\tstate.isAuthenticated = true;\r\n\t\t\tstate.loading = false;\r\n\t\t\tstate.user = action.payload;\r\n\t\t})\r\n\t\t.addCase(LoadUserFail, (state, action) => {\r\n\t\t\tstate.loading = false;\r\n\t\t\tstate.error = action.payload;\r\n\t\t\tstate.isAuthenticated = false;\r\n\t\t})\r\n\t\t.addCase(updateUserInfoRequest, (state) => {\r\n\t\t\tstate.loading = true;\r\n\t\t})\r\n\t\t.addCase(updateUserInfoSuccess, (state, action) => {\r\n\t\t\tstate.loading = false;\r\n\t\t\tstate.user = action.payload;\r\n\t\t})\r\n\t\t.addCase(updateUserInfoFailed, (state, action) => {\r\n\t\t\tstate.loading = false;\r\n\t\t\tstate.error = action.payload;\r\n\t\t})\r\n\t\t.addCase(updateUserAddressRequest, (state) => {\r\n\t\t\tstate.addressloading = true;\r\n\t\t})\r\n\t\t.addCase(updateUserAddressSuccess, (state, action) => {\r\n\t\t\tstate.addressloading = false;\r\n\t\t\tstate.successMessage = action.payload.successMessage;\r\n\t\t\tstate.user = action.payload.user;\r\n\t\t})\r\n\t\t.addCase(updateUserAddressFailed, (state, action) => {\r\n\t\t\tstate.addressloading = false;\r\n\t\t\tstate.error = action.payload;\r\n\t\t})\r\n\t\t.addCase(deleteUserAddressRequest, (state) => {\r\n\t\t\tstate.addressloading = true;\r\n\t\t})\r\n\t\t.addCase(deleteUserAddressSuccess, (state, action) => {\r\n\t\t\tstate.addressloading = false;\r\n\t\t\tstate.successMessage = action.payload.successMessage;\r\n\t\t\tstate.user = action.payload.user;\r\n\t\t})\r\n\t\t.addCase(deleteUserAddressFailed, (state, action) => {\r\n\t\t\tstate.addressloading = false;\r\n\t\t\tstate.error = action.payload;\r\n\t\t})\r\n\t\t.addCase(getAllUsersRequest, (state) => {\r\n\t\t\tstate.usersLoading = true;\r\n\t\t})\r\n\t\t.addCase(GET_ALL_USERS_SUCCESS, (state, action) => {\r\n\t\t\tstate.usersLoading = false;\r\n\t\t\tstate.users = action.payload;\r\n\t\t})\r\n\t\t.addCase(GET_ALL_USERS_FAILED, (state, action) => {\r\n\t\t\tstate.usersLoading = false;\r\n\t\t\tstate.error = action.payload;\r\n\t\t})\r\n\t\t.addCase(CLEAR_ERRORS, (state) => {\r\n\t\t\tstate.error = null;\r\n\t\t})\r\n\t\t.addCase(CLEAR_MESSAGES, (state) => {\r\n\t\t\tstate.successMessage = null;\r\n\t\t});\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}